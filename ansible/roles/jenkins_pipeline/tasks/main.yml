---
# ==========================================================
# Role: jenkins_pipeline
# Purpose: Create a Jenkins pipeline job from a GitHub repo
# ==========================================================

- name: Wait for Jenkins to be ready before creating the pipeline job
  uri:
    url: http://localhost:8080/login
    status_code: 200
  register: jenkins_ready
  retries: 10
  delay: 10
  until: jenkins_ready.status == 200
  tags: [jenkins_pipeline]

# 🧠 Generate Groovy script that creates the pipeline job
- name: Create Jenkins pipeline job Groovy script from template
  template:
    src: create_pipeline_job.groovy.j2
    dest: /tmp/create_pipeline_job.groovy
  become: yes
  tags: [jenkins_pipeline]

# 🔍 Slurp the generated script for sending via API
- name: Read Groovy script content from remote node
  slurp:
    src: /tmp/create_pipeline_job.groovy
  register: pipeline_script
  become: yes
  tags: [jenkins_pipeline]

# 🧩 Send it to Jenkins via the Script API
- name: Push pipeline creation Groovy script to Jenkins
  uri:
    url: "http://localhost:8080/scriptText"
    method: POST
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_token }}"
    force_basic_auth: yes
    body: "script={{ pipeline_script['content'] | b64decode | urlencode }}"
    headers:
      Content-Type: application/x-www-form-urlencoded
  register: groovy_output
  failed_when: groovy_output.status not in [200, 201]
  changed_when: true
  tags: [jenkins_pipeline]

- name: Print Jenkins pipeline creation result
  debug:
    msg: >
      ✅ Jenkins pipeline creation finished with status {{ groovy_output.status }}
      {{ groovy_output.msg | default('') }}
  tags: [jenkins_pipeline]
